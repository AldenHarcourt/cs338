import math 

q = 2033177614703748282427826439532326232741321778331230245202726527778175570384221856907625888368944926825673451809360147292727683312033259374927100668547923824407975668024405441114148895345289779905919474036139222070413299841484604899979730854744758989745164273677440119658441112992278375945749780385316185746559169993433271640350127408876772929343431454246934616707438651763283504992964010399187984659577237906905441005636349084801091376251787464519376271785572477
p = 2257060311877968479187001356995111415299541994185324463018410357146203709027596200868776515727984345231363186091420350723231393794036545747467443965956124073211685379193996454023979126105812728853634215088087437032505071378822559467941091305267594871639252170809413598350242056013966445202414475940763407926917150255341593719087935014891725676013546703896346781450015619664648718121553684190624117144674392050382483232564686297358083907614536799928643786539411949
m = 2257060311877968479187001356995111415299541994185324463018410357146203709027596200868776515727984345231363186091420350723231393794036545747467443965956124073211685379193996454023979126105812728853634215088087437032505071378822559467941091305267594871639252170809413598350242056013966445202414475940763407926917150255341593719087935014891725676013546703896346781450015619664648718121553684190624117144674392050382483232564686297358083907614536799928643786539411949 * 2033177614703748282427826439532326232741321778331230245202726527778175570384221856907625888368944926825673451809360147292727683312033259374927100668547923824407975668024405441114148895345289779905919474036139222070413299841484604899979730854744758989745164273677440119658441112992278375945749780385316185746559169993433271640350127408876772929343431454246934616707438651763283504992964010399187984659577237906905441005636349084801091376251787464519376271785572477
n = 4589004501146546129500770666748560868636636402140150924853872310239406726833575418693271459128394601924706047882795132178761055297227958800648593894999317765820971075668688240252332503162459316735645827023666060961521225146455142403255653848248736421407991921730206031824929521669374936025410206255563119718973403754265419262041250140003532512256202413806287661842707245252226448404241428769632660111494901302451574628405410293041049900122928360980344980640170003608880839703805395497486399341133805501781104179687128978371196792421225557714656070336491751901716145948142016158171903517564707291973929298124510402088244198041939061404010653314577566572678623747907902103653311318947020458098233632624045818524097418003495194447356391133040937225761764713944671104924028904106292689398567052999892765323159496452483293998248779469408965098031191084910124106382774581549855616609980791716272245170605757765231246887281899327673
e = 65537
d = 863961304872006033520686922985139970973238601825018725091314883194057095976869101477744326082300025876191854552418751825497707871657951533664993450622535090919359317898867965460021126848497860438267940807963496851759000815867933755627658956110548763836344482143951464419669696554886287870203454993122443087912985675603153570726398291841762453308408280555241776639856010277318095635072293038651640703506108606135446443269910964808993304433629119153394060509769100456125174841034691993243254509922487126837183525726831766988656132930032691779379252173668927947228304485017524872780708022039447452274742877760964016783966557171561621753842902240403476367985883842110081188264538205143728125521423044769634985114232529722352642868060899672822143528210564983113808155622603879422892455246166015485999682886304854508200876941572873334662473142199413350086041013320502195946055900155469962847188036163591240940909239785514107634377
exp1 = 1419078843263068055982122936890360649212164546293029807569366903675928465301770014751940679777402001087299084225658415117426027759636172963736454653359508253912865954341648593741826142349970451690098689789045010344147145370773510579924510844767860089505094613702212297175972716451096134619611646568185242284947757393096271864672144930170950096588769579535971575287973108446859795690962655554490848634302887291697975519139232782743180911748432013077494655299395293
exp2 = 1734174519497761954917574349503601081587609229701350984582559625498149689624297993183688291101754008645930089608792329119675675869498865767414590235609814209691951597828650071758545693286332200237438281873539319384683965513208537609349939347992390295066373769539271331443111521356720157117223354345770930421699361329675243777163003677751540808663327202358200682657569208155939158728682961034289167256446099482095720688680688427778143748433688870091225021232917525
coeff = 1758663683935358677868069683325075125561170933141242867495737232961234356494711843848303124121355516640156998470859160320111547690896712003078656055430258767789083425195803455174792184456755061101451339865504617768526821217726408971502556250953101339705232625233048507771863525619335986301873136889659107245126558584307157775659564778694639435861985724764545765308025748849452354658237057004391344993115683837761800510015012205956112175055191306355289916057574129


def lcm(a, b):
    return abs(a * b) // math.gcd(a, b)

ln = lcm(p-1, q - 1)

if m == n:
    print("Sane")
else:
    print("Insane")

if d % (p - 1) == exp1:
    print("Sane")
else: 
    print("Insane")

if d % (q - 1) == exp2:
    print("Sane")
else: 
    print("Insane")

if (e * d) % ln == 1:
    print("Sane")
else: 
    print("Insane")

